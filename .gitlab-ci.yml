stages:
  - start_services
  - security_scan
  - save_results
  - visualize

# 1️⃣ Juice Shop 실행 (로컬에서 실행됨)
start_juice_shop:
  image: docker:latest
  stage: start_services
  services:
    - docker:dind
  tags:
    - euro-mac
  script:
    - echo "Checking if Juice Shop is already running..."
    - docker ps -a | grep "juice-shop" && docker rm -f juice-shop || echo "No existing container."
    - echo "Starting Juice Shop..."
    - docker run -d --name juice-shop -p 3000:3000 bkimminich/juice-shop
    - sleep 10
    - docker ps  

# 2️⃣ OWASP ZAP 실행 (Juice Shop 타겟)
zap_scan:
  image: owasp/zap2docker-stable
  stage: security_scan
  dependencies:
    - start_juice_shop
  tags:
    - euro-mac
  before_script:
    - echo "ZAP_API_KEY=$ZAP_API_KEY" > ZAP/Main/.env
    - echo "TARGET_URL=$TARGET_URL" > ZAP/Main/.env
    - pip3 install zaproxy
    - pip3 install python-dotenv

  script:
    - echo "Running OWASP ZAP against Juice Shop..."
    - python3 ZAP/Main/zap_exec.py
    - python3 ZAP/Main/main.py
  artifacts:
    paths:
      - zap_results.json
      - zap_report.html

# 3️⃣ JSON 데이터를 PostgreSQL에 저장
save_to_db:
  image: python:3.9
  stage: save_results
  dependencies:
    - zap_scan
  before_script:
    - pip3 install psycopg2-binary
  tags:
    - euro-mac
  script:
    - python3 ZAP/Main/server.py
  allow_failure: false

# 4️⃣ Grafana에서 데이터 시각화 + 데이터 소스 및 대시보드 자동 추가
grafana_visualization:
  stage: visualize
  tags:
    - euro-mac
  script:
    - echo "Stopping any existing Grafana container..."
    - docker stop grafana || true
    - docker rm grafana || true

    - echo "Starting Grafana with PostgreSQL as its database and provisioning settings..."
    - docker run -d --name=grafana 
        -p 4000:3000 
        -v grafana_data:/var/lib/grafana 
        -v $CI_PROJECT_DIR/grafana/provisioning:/etc/grafana/provisioning 
        -v $CI_PROJECT_DIR/grafana/dashboards:/var/lib/grafana/dashboards 
        -e GF_DATABASE_TYPE=postgres 
        -e GF_DATABASE_HOST=host.docker.internal 
        -e GF_DATABASE_USER=eurobae 
        -e GF_DATABASE_PASSWORD=$DB_PASSWORD 
        -e GF_DATABASE_NAME=ZAP_DB 
        grafana/grafana:latest

    - sleep 20
   

    - echo "Testing Grafana provisioning..."
    - curl -s -u admin:$eurobea0309 http://localhost:4000/api/datasources
    - curl -s -u admin:$eurobea0309 http://localhost:4000/api/search?query=
